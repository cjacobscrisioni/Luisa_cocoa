container cocoa_revenue_modifiers {
	
	
	unit<uint8> scenario_revenues:= Classifications/ActiveModelTypes {
		attribute<scenario_revenue_subset> rev_rel:= invert(scenario_revenue_subset/Landuse_rel);
		attribute<float32> 	revfactor:= 1f+makedefined(scenario_revenue_subset/infactor[rev_rel] / 100f, 0f);
	}
	
	unit<uint32> scenario_revenue_subset:= subset(revenue_inputs/Scenario_rel == /RunSettings/Scenarios/second_rel[RunSettings/Scenarioid]) {
		attribute<Classifications/ActiveModelTypes> Landuse_rel:= revenue_inputs/Landuse_rel[Nr_OrgEntity];
		attribute<float32> infactor:= revenue_inputs/infactor[Nr_OrgEntity];
	}
	
	
	
	unit<uint32> revenue_inputs: nrofrows = 4 {
		
		//
		
		attribute<RunSettings/Cocoa_Scenarios> Scenario_rel:= rlookup(uppercase(inscenario), uppercase(RunSettings/Cocoa_Scenarios/LabelText));
		attribute<Classifications/ActiveModelTypes> Landuse_rel:= rlookup(uppercase(inlanduse), uppercase(Classifications/ActiveModelTypes/name));
			
		attribute<string> inlanduse:= inMatrix/line[((id(.)*3)+0)[inMatrix]];
		attribute<string> inscenario:= inMatrix/line[((id(.)*3)+1)[inMatrix]];
		attribute<float32> infactor:= float32(inMatrix/line[((id(.)*3)+2)[inMatrix]]);
		
		// % price change in the producer prices (so these numbers / 100 + 1)
		unit<uint32> inMatrix:= range(uint32, 0, #revenue_inputs*3) {
			
			attribute<string> line: [
				'Crops', 				'EUDR_0', '0.33464201',
				'NonCompliant_Cocoa', 	'EUDR_0', '8.85902963',
				'Cocoa', 				'EUDR_0', '27.2287032',
				'Rehabilitated_Cocoa', 		'EUDR_0', '27.2287032'
		];
		}
	}
}